plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.orion.clinics'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	mockitoAgent
}

repositories {
	mavenCentral()
}

dependencies {
	// spring boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.4.1'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// database
	implementation 'org.liquibase:liquibase-core:4.24.0'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mockito:mockito-core:5.14.0' // for inline mocking required for Java 21+
	mockitoAgent 'org.mockito:mockito-core:5.14.0', {
		transitive = false
	}

	// mapstruct
	implementation "org.mapstruct:mapstruct:1.4.2.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"

	// Jakarta validation
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}"
}